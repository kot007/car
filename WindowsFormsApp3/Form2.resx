<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KcmhCST69pQAAAAASUVORK5CYII=
</value>
  </data>
</root>